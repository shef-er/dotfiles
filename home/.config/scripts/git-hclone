#!/usr/bin/env bash

GIT_CLONE_ROOT=${GIT_CLONE_ROOT:-Clones}

gitcmd="$(command -v git 2>/dev/null)"

if [ -z "$gitcmd" ]; then
    exit 1
fi

function _hclone_prepare_address_fragments {
    fragments="$1"

    # Cut out schema prefix
    fragments="${fragments#*://}"

    # Cut out user prefix
    fragments="${fragments#*@}"

    # Cut out '.git' suffix
    fragments="${fragments%.git}"

    echo -n "$fragments"
}

function _hclone_parse_path_from_url_address {
    fragments="$(_hclone_prepare_address_fragments "$1")"

    host_fragment="${fragments%%/*}"
    host="${host_fragment%%\:*}"

    path="${fragments#*/}"

    echo -n "$host/$path"
}

function _hclone_parse_path_from_scp_address {
    fragments="$(_hclone_prepare_address_fragments "$1")"

    host_fragment="$fragments"
    host="${host_fragment%%\:*}"

    path="${fragments#*\:}"

    echo -n "$host/$path"
}

function _hclone_parse_path_from_address {
    address="$2"

    # Check if address has schema prefix like 'http://' or 'ssh://'
    if [[ "$uri" =~ ^[A-Za-z]+:// ]]; then
        path="$(_hclone_parse_path_from_url_address "$address")"
    else
        path="$(_hclone_parse_path_from_scp_address "$address")"
    fi

    echo -n "$path"
}

if [ -z "$1" ]; then
    exit 1
fi

uri="$1"

$gitcmd clone -- "$uri" "$HOME/$GIT_CLONE_ROOT/$(_hclone_parse_path_from_address "$uri")"
